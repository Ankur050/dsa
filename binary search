/// creation of binary search 


#include<iostream>
using namespace std ;

int binarysearch(int arr[],int size,int key){
    int start=0;
    int end=size-1;
    int mid=(start+end)/2;
    while(start<=end){
        if(arr[mid]==key){
            return mid;
        }
        // go right side
        if(arr[mid]<key){
            start=mid+1;
        }
        else{
            end=mid-1;
        }
        mid=(start+end)/2;
    }
    return -1;
}

int main(){
    int even[6]={2,4,6,8,12,18};
    int odd[5]={3,5,7,9,56};
    int evenIndex=binarysearch(even,6,12);
    cout<<"index of 12 is "<<evenIndex<<endl;
    int oddIndex=binarysearch(odd,5,9);
    cout<<"index of 9 is "<<oddIndex<<endl;
}




/// FINDING THE FIRST AND LAST OCCURENCE OF ELEMNT IN AN  ARRAY 


#include<iostream>
using namespace std ;

int firstocc(int arr[],int size,int key){
    int start=0;
    int end=size-1;
    int mid=start+(end-start)/2;
    int ans =-1;
    while(start<=end){
        if(arr[mid]==key){
          ans=mid;
            end=mid-1;
        }
        else if(arr[mid]<key){
            start=mid+1;
        }
        else{
            end=mid-1;
        }
        mid=start+(end-start)/2;
    }
    return ans;
}


int lastocc(int arr[],int size,int key){
    int start=0;
    int end=size-1;
    int mid=start+(end-start)/2;
    int ans =-1;
    while(start<=end){
        if(arr[mid]==key){
          ans=mid;
            start=mid+1;
        }
        else if(arr[mid]<key){
            start=mid+1;
        }
        else{
            end=mid-1;
        }
        mid=start+(end-start)/2;
    }
    return ans;
}



int main(){
    int even[9]={1,3,3,3,3,3,5,5,7};
   

    cout<<"the first occurence of 3 is "<<firstocc(even,9,3)<<endl;
    cout<<"the last occurence of 3 is "<<lastocc(even,9,3)<<endl;

}

